@using Procedure.Web.Models
@using System.Linq
@model WorkPackagePathwayViewModel

<section>
    <div class="container">
        <div class="block--border">
            <h2>@Model.WorkPackage.Title</h2>
            <dl class="list--definition">
                <dt>Subject to </dt>
                <dd>@Html.ActionLink(Model.WorkPackage.SubjectTo.Value, "Details", "Procedure", new { id = Model.WorkPackage.SubjectTo.Id }, new { })</dd>
            </dl>
            @Html.ActionLink("Show details", "Details", "WorkPackage", new { id = Model.WorkPackage.Id }, new { @class = "btn--primary" })
        </div>
    </div>
</section>
@{
    int[] stepsDone = Model.BusinessItems.SelectMany(bi => bi.Actualises).Select(s => s.Id).ToArray();
    int[] startingSteps = Model.Routes
        .Where(r => Model.Routes.Any(to => to.ToStep.Id == r.FromStep.Id) == false)
        .Select(r => r.FromStep.Id)
        .Distinct()
        .ToArray();
    int[] beginSteps = startingSteps.Intersect(stepsDone).ToArray();
}
<section>
    <div class="container">
        <ul>
            @{
                int lastStepId = 0;
                foreach (int stepId in beginSteps)
                {
                    BusinessItem businessItem = Model.BusinessItems.FirstOrDefault(b => b.Actualises.Exists(s => s.Id == stepId));
                    ReferenceTable step = businessItem.Actualises.FirstOrDefault(s => s.Id == stepId);
                    <li class="list--block">
                        <p>@Html.ActionLink(step.Value, "Details", "Step", new { id = step.Id }, new { }) is actualised by [@businessItem.Title]</p>
                        <p class="center-text">&dArr;</p>
                    </li>
                    ProcedureRouteItem nextCompletedStep = Model.Routes
                        .Where(r => businessItem.Actualises.Exists(s => s.Id == r.FromStep.Id) && stepsDone.Contains(r.ToStep.Id))
                        .SingleOrDefault();
                    lastStepId = nextCompletedStep?.ToStep?.Id ?? step.Id;
                    while (nextCompletedStep != null)
                    {
                        businessItem = Model.BusinessItems.FirstOrDefault(b => b.Actualises.Exists(s => s.Id == nextCompletedStep.ToStep.Id));
                        <li class="list--block">
                            <p>@Html.ActionLink(nextCompletedStep.ToStep.Value, "Details", "Step", new { id = nextCompletedStep.ToStep.Id }, new { }) is actualised by [@businessItem.Title]</p>
                            <p class="center-text">&dArr;</p>
                        </li>
                        nextCompletedStep = Model.Routes
                            .Where(r => businessItem.Actualises.Exists(s => s.Id == r.FromStep.Id) && stepsDone.Contains(r.ToStep.Id))
                            .SingleOrDefault();
                        lastStepId = nextCompletedStep?.ToStep?.Id ?? lastStepId;
                    }
                }
            }
        </ul>
        <div class="block--border__bottom">
            @{Html.RenderPartial("PathwayRoute", new PathwayRouteViewModel() { FromStepId = lastStepId, Routes = Model.Routes });}
        </div>
    </div>
</section>