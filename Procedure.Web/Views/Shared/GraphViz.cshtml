@{
    Layout = "";
}
@using Procedure.Web.Models
@using System.Linq
@model GraphVizViewModel

<script src="//d3js.org/d3.v4.min.js"></script>
<script src="https://unpkg.com/viz.js@1.8.0/viz.js" type="javascript/worker"></script>
<script src="https://unpkg.com/d3-graphviz@2.1.0/build/d3-graphviz.min.js"></script>
<div id="graph" style="text-align: center"></div>
<script>
    var i = "@Model.DotString";
    var parser = new DOMParser;
    var dom = parser.parseFromString(
        '<!doctype html><body>' + i,
        'text/html');
    var decodedString = dom.body.textContent;

    function attributer(datum, index, nodes) {
        var selection = d3.select(this);
        if (datum.tag == "svg") {
            var width = window.innerWidth;
            var height = window.innerHeight;
            selection
                .attr("width", width)
                .attr("height", height)
            datum.attributes.width = width;
            datum.attributes.height = height;
            datum.attributes.overflow = "visible";
        }
    }

    function transitionFactory() {
        return d3.transition("main")
            .ease(d3.easeLinear)
            .duration(300);
    }

    d3.select("#graph").graphviz()
        .logEvents(true)
        .transition(transitionFactory)
        .attributer(attributer)
        .renderDot(decodedString, function () {
            console.log('Callback');
        })
        .on("end", function () {
            console.log('"end" event');
        });

</script>
